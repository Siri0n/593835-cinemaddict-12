{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/const.js","webpack:///./src/main.js","webpack:///./src/mocks/comment-mock.js","webpack:///./src/mocks/film-mock.js","webpack:///./src/presenter/movie-list.js","webpack:///./src/utils.js","webpack:///./src/utils/film.js","webpack:///./src/utils/render.js","webpack:///./src/view/abstract.js","webpack:///./src/view/film-card.js","webpack:///./src/view/film-details-comment.js","webpack:///./src/view/film-details.js","webpack:///./src/view/film-extra.js","webpack:///./src/view/films-list-container.js","webpack:///./src/view/films-list.js","webpack:///./src/view/films-section.js","webpack:///./src/view/main-nav.js","webpack:///./src/view/no-films.js","webpack:///./src/view/show-more-button.js","webpack:///./src/view/sorting.js","webpack:///./src/view/statistics.js","webpack:///./src/view/user-title.js"],"names":[],"mappings":"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;AACA;;AAEA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA,mEAAmE,8EAAwB;;AAE3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,WAAW,SAAS,MAAM;;AAEtG,6CAA6C,UAAU;AACvD;;AAEA;AACA;AACA;AACA,oDAAoD,MAAM;AAC1D,sEAAsE,cAAc;AACpF;;AAEA;AACA,0DAA0D,OAAO;AACjE;AACA;;AAEA;AACA;AACA;AACA,mDAAmD,SAAS;AAC5D;AACA;AACA;AACA,mDAAmD,YAAY;AAC/D;AACA;AACA;AACA,mDAAmD,WAAW;AAC9D;AACA;AACA;AACA,mDAAmD,cAAc;AACjE;AACA;AACA;AACA,mDAAmD,QAAQ;AAC3D;AACA;AACA;AACA,mDAAmD,QAAQ;AAC3D;AACA;AACA,iDAAiD,UAAU;AAC3D;AACA,oBAAoB;AACpB;AACA;AACA;;AAEA,0DAA0D,YAAY;AACtE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,2GAA2G,cAAc;AACzH;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,8BAA8B,oDAAY;AACzD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC1LA;AAAA;AAAA;AAAyC;;AAEzC;AACA;AACA;AACA,sCAAsC,MAAM;AAC5C;AACA;AACA;;AAEe,oCAAoC,oDAAY;AAC/D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAyC;;AAEzC;AACA;AACA;AACA;AACA;;AAEe,iCAAiC,oDAAY;AAC5D;AACA;AACA;AACA;;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAyC;;AAEzC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEe,wBAAwB,oDAAY;AACnD;AACA;AACA;AACA;;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAyC;;AAEzC;AACA;AACA;AACA;AACA;;AAEe,2BAA2B,oDAAY;AACtD;AACA;AACA;AACA;;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAyC;AACL;;AAEpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oGAAoG,iDAAO,SAAS;AACpH,4EAA4E,iDAAO,WAAW,wDAAwD,gBAAgB;AACtK,0EAA0E,iDAAO,SAAS,sDAAsD,cAAc;AAC9J,4EAA4E,iDAAO,WAAW,wDAAwD,gBAAgB;AACtK;AACA;AACA;AACA;AACA;;AAEe,6BAA6B,oDAAY;AACxD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9CA;AAAA;AAAA;AAAyC;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,0BAA0B,oDAAY;AACrD;AACA;AACA;AACA;;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAyC;;AAEzC;AACA;AACA;AACA;AACA;;AAEe,6BAA6B,oDAAY;AACxD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5BA;AAAA;AAAA;AAAA;AAAyC;AACJ;;AAErC;AACA;AACA;AACA,kFAAkF,kDAAQ,SAAS;AACnG,6DAA6D,kDAAQ,MAAM;AAC3E,6DAA6D,kDAAQ,QAAQ;AAC7E;AACA;AACA;;AAEe,sBAAsB,oDAAY;AACjD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAyC;;AAEzC;AACA;;AAEA;AACA,UAAU,YAAY;AACtB;AACA;;AAEe,yBAAyB,oDAAY;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAyC;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,6BAA6B,oDAAY;AACxD;AACA;AACA;AACA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.js\");\n","export const EMOJI = [`angry.png`, `puke.png`, `sleeping.png`, `smile.png`];\nexport const COMMENTS_COUNT = 5;\nexport const GENRES_COUNT = 1;\nexport const POSTERS = [`made-for-each-other.png`, `popeye-meets-sinbad.png`, `sagebrush-trail.jpg`, `santa-claus-conquers-the-martians.jpg`, `the-dance-of-life.jpg`, `the-great-flamarion.jpg`, `the-man-with-the-golden-arm.jpg`];\n\nexport const NavType = {\n  DEFAULT: `all`,\n  WATCHLIST: `watchlist`,\n  HISTORY: `history`,\n  FAVORITES: `favorites`\n};\n\nexport const SortType = {\n  DEFAULT: `default`,\n  DATE: `date-down`,\n  RATING: `rating-down`,\n};\n","const FILMS_AMOUNT = 15;\n\nimport {createFilmDataTemplate} from \"./mocks/film-mock.js\";\nimport {createCommentDataTemplate} from \"./mocks/comment-mock\";\nimport TitleOfTheUserView from \"./view/user-title.js\";\nimport StatisticsView from \"./view/statistics.js\";\nimport {render, RenderPosition} from \"./utils/render.js\";\nimport MoviePresenter from \"./presenter/movie-list.js\";\n\n\n// массивы с данными\nlet filmsData = new Array(FILMS_AMOUNT).fill().map(createFilmDataTemplate);\n// filmsData = null;\nconst commentsData = new Array(FILMS_AMOUNT).fill().map(createCommentDataTemplate);\n\n\nconst siteHeaderElement = document.querySelector(`.header`);\nconst siteMainElement = document.querySelector(`.main`);\nconst siteFooterElement = document.querySelector(`.footer`);\n\n// пользователь\nrender(siteHeaderElement, new TitleOfTheUserView(), RenderPosition.BEFOREEND);\n\n\n// статистика в футоре\nrender(siteFooterElement, new StatisticsView(filmsData), RenderPosition.BEFOREEND);\n\nconst movieListPresenter = new MoviePresenter(siteMainElement, siteFooterElement);\n\nmovieListPresenter.init(filmsData, commentsData);\n","import {EMOJI} from \"../const.js\";\nimport {getRandomInteger} from \"../utils.js\";\n\nexport const createCommentDataTemplate = () => {\n  return {\n    author: `Tim Macoveev`,\n    text: `Interesting setting and a good cast`,\n    emoji: EMOJI[getRandomInteger(0, EMOJI.length - 1)],\n    date: `2019/12/31 23:59`\n  };\n};\n","import {getRandomInteger} from \"../utils.js\";\nimport {POSTERS} from \"../const.js\";\n\n\nconst string = `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras aliquet varius magna, non porta ligula feugiat eget. Fusce tristique felis at fermentum pharetra. Aliquam id orci ut lectus varius viverra. Nullam nunc ex, convallis sed finibus eget, sollicitudin eget ante. Phasellus eros mauris, condimentum sed nibh vitae, sodales efficitur ipsum. Sed blandit, eros vel aliquam faucibus, purus ex euismod diam, eu luctus nunc ante ut dui. Sed sed nisi sed augue convallis suscipit in sed felis. Aliquam erat volutpat. Nunc fermentum tortor ac porta dapibus. In rutrum ac purus sit amet tempus.`;\n\nconst generateDescriptions = () => {\n  const descriptions = string.split(`.`).filter((item) => {\n    return item !== ``;\n  });\n\n  const randomIndex = getRandomInteger(0, descriptions.length - 1);\n  return descriptions[randomIndex];\n};\n\nconst generateRating = () => {\n  return getRandomInteger(0, 90) / 10;\n};\n\nconst generateDate = () => {\n  const maxYearsGap = new Date().getFullYear();\n  const minYearsGap = 1900;\n\n  return getRandomInteger(minYearsGap, maxYearsGap);\n};\n\nexport const createFilmDataTemplate = () => {\n  let cuurentPoster = POSTERS[getRandomInteger(0, 6)];\n\n  return {\n    title: `Predator-${getRandomInteger(0, 5)}`,\n    poster: cuurentPoster,\n\n    posterFull: cuurentPoster,\n    originalTitle: `Best Film Ever`,\n    director: `Tom`,\n    writers: [`Tom`, `Johns`],\n    actors: [`Bob`, `Rob`, `Tod`, `John Wayne`],\n    dateOfRelease: generateDate(),\n    country: `USA`,\n    ageRating: `${getRandomInteger(0, 18)}+`,\n    genres: [`Film-Noir`, `Drama`, `Musical`],\n    description: generateDescriptions(),\n    rating: generateRating(),\n    dateOfProduction: generateDate(),\n    runtime: `1h 55m`,\n    genre: `Musical`,\n    commentsCount: getRandomInteger(0, 10),\n    isWatchlist: Boolean(getRandomInteger(0, 1)),\n    isWatched: Boolean(getRandomInteger(0, 1)),\n    isFavorite: Boolean(getRandomInteger(0, 1))\n  };\n};\n","import {NavType, SortType} from \"../const.js\";\nimport MainNavigationView from \"../view/main-nav.js\";\nimport SortingView from \"../view/sorting.js\";\nimport FilmsSectionView from \"../view/films-section.js\";\nimport NoFilmsDataView from \"../view/no-films.js\";\nimport FilmsListView from \"../view/films-list.js\";\nimport FilmCardView from \"../view/film-card\";\nimport FilmFilmDetailsView from \"../view/film-details\";\nimport ShowMoreButtonView from \"../view/show-more-button.js\";\nimport FilmsListExtraSectionView from \"../view/film-extra.js\";\nimport FilmsListContainerView from \"../view/films-list-container.js\";\nimport {render, RenderPosition, remove} from \"../utils/render.js\";\nimport {compareYear, compareRating} from \"../utils/film.js\";\n\nconst CARDS_AMOUNT_PER_STEP = 5;\nconst CARDS_EXTRA_AMOUNT = 2;\n\nexport default class MovieList {\n  constructor(siteMainElement, siteFooterElement) {\n\n    this._currentNavType = NavType.DEFAULT;\n    this._currentSortType = SortType.DEFAULT;\n    this._siteMainElement = siteMainElement;\n    this._siteFooterComponent = siteFooterElement;\n    this._renderCardsCount = CARDS_AMOUNT_PER_STEP;\n    this._noFilmsSectionComponent = new NoFilmsDataView();\n    this._showMoreButtonComponent = new ShowMoreButtonView();\n    this._handleShowMoreButtonClick = this._handleShowMoreButtonClick.bind(this);\n    this._handleNavTypeChange = this._handleNavTypeChange.bind(this);\n    this._handleSortTypeChange = this._handleSortTypeChange.bind(this);\n\n    this.filmDetailsComponent = null;\n  }\n\n  init(dataFilmsArray, dataCommentsArray) {\n    this._siteMainNavComponent = new MainNavigationView(dataFilmsArray);\n    render(this._siteMainElement, this._siteMainNavComponent, RenderPosition.BEFOREEND);\n    this._siteMainNavComponent.setNavTypeChangeHandler(this._handleNavTypeChange);\n\n    this._sortingComponent = new SortingView();\n    render(this._siteMainElement, this._sortingComponent, RenderPosition.BEFOREEND);\n    this._sortingComponent.setSortTypeChangeHandler(this._handleSortTypeChange);\n\n    this._filmsSectionComponent = new FilmsSectionView();\n    render(this._siteMainElement, this._filmsSectionComponent, RenderPosition.BEFOREEND);\n\n    if (!dataFilmsArray) {\n      render(this._filmsSectionComponent, this._noFilmsSectionComponent, RenderPosition.BEFOREEND);\n      return;\n    }\n\n    this._dataFilmsArray = dataFilmsArray.slice();\n    this._dataCommentsArray = dataCommentsArray.slice();\n    this._currentFilmsArray = dataFilmsArray.slice();\n\n    this._renderMainContent();\n    this._renderExtra();\n  }\n\n\n  _configureArrayTheTypeOfNav(navType) {\n    switch (navType) {\n      case NavType.WATCHLIST:\n        this._currentFilmsArray = this._dataFilmsArray.filter((item) => item.isWatchlist === true);\n        break;\n      case NavType.HISTORY:\n        this._currentFilmsArray = this._dataFilmsArray.filter((item) => item.isWatched === true);\n        break;\n      case NavType.FAVORITES:\n        this._currentFilmsArray = this._dataFilmsArray.filter((item) => item.isFavorite === true);\n        break;\n      default:\n        this._currentFilmsArray = this._dataFilmsArray;\n    }\n    this._currentNavType = navType;\n  }\n\n  _configureArrayTheTypeOfSort(sortType) {\n    switch (sortType) {\n      case SortType.DATE:\n        this._currentFilmsArray = this._currentFilmsArray.sort(compareYear);\n        break;\n      case SortType.RATING:\n        this._currentFilmsArray = this._currentFilmsArray.sort(compareRating);\n        break;\n      default:\n        this._currentFilmsArray = this._dataFilmsArray;\n    }\n\n    this._currentSortType = sortType;\n  }\n\n  _handleNavTypeChange(navType) {\n    if (this._currentNavType === navType) {\n      return;\n    }\n    // очищаю контент и перезаписываю счетчик для кнопки more\n    remove(this._filmsListComponent);\n    this._renderCardsCount = CARDS_AMOUNT_PER_STEP;\n    // сортирую текущий карточки согласно выбранному пункты и отрисовываю контент\n    this._configureArrayTheTypeOfNav(navType);\n    this._renderMainContent();\n  }\n\n  _handleSortTypeChange(sortType) {\n    if (this._currentSortType === sortType) {\n      return;\n    }\n    // очищаю контент и перезаписываю счетчик для кнопки more\n    remove(this._filmsListComponent);\n    this._renderCardsCount = CARDS_AMOUNT_PER_STEP;\n    // сортирую текущий карточки согласно выбранному пункты и отрисовываю контент\n    this._configureArrayTheTypeOfSort(sortType);\n    this._renderMainContent();\n  }\n\n\n  _handleShowMoreButtonClick() {\n    this._renderCards(this._renderCardsCount, this._renderCardsCount + CARDS_AMOUNT_PER_STEP, this._currentFilmsArray, this._filmsListContainerComponent);\n    this._renderCardsCount += CARDS_AMOUNT_PER_STEP;\n\n    if (this._renderCardsCount >= this._currentFilmsArray.length) {\n      remove(this._showMoreButtonComponent);\n    }\n  }\n\n  _renderShowMoreButton() {\n    render(this._filmsListComponent, this._showMoreButtonComponent, RenderPosition.BEFOREEND);\n    this._showMoreButtonComponent.setClickHandler(this._handleShowMoreButtonClick);\n  }\n\n  _renderCard(dataFilm, listContainerComponent) {\n    const filmCardComponent = new FilmCardView(dataFilm);\n    render(listContainerComponent, filmCardComponent, RenderPosition.BEFOREEND);\n\n    filmCardComponent.setHandler(() => {\n      if (this.filmDetailsComponent) {\n        remove(this.filmDetailsComponent);\n      }\n\n      this.filmDetailsComponent = new FilmFilmDetailsView(dataFilm, this._dataCommentsArray);\n      render(this._siteFooterComponent, this.filmDetailsComponent, RenderPosition.AFTEREEND);\n      document.addEventListener(`keydown`, onEscKeyDown);\n      this.filmDetailsComponent.setHandler(() => {\n        remove(this.filmDetailsComponent);\n      });\n    });\n\n    const onEscKeyDown = (evt) => {\n      if (evt.key === `Escape` || evt.key === `Esc`) {\n        evt.preventDefault();\n        remove(this.filmDetailsComponent);\n        document.removeEventListener(`keydown`, onEscKeyDown);\n      }\n    };\n  }\n\n  _renderCards(from, to, currentFilmsArray, place) {\n    currentFilmsArray\n      .slice(from, to)\n      .forEach((dataFilm) => this._renderCard(dataFilm, place));\n  }\n\n  _renderExtra() {\n    // фильтруем массив сортируем по рейтингу\n    let dataArrayRating = this._dataFilmsArray.filter((item) => item.rating > 0);\n    if (dataArrayRating.length > 0) {\n      const extraSectionTopRatingComponent = new FilmsListExtraSectionView(`Top rated`);\n      render(this._filmsSectionComponent, extraSectionTopRatingComponent, RenderPosition.BEFOREEND);\n      const filmsListTopRatingContainerComponent = new FilmsListContainerView();\n      render(extraSectionTopRatingComponent, filmsListTopRatingContainerComponent, RenderPosition.BEFOREEND);\n      dataArrayRating = dataArrayRating.sort((a, b) => a.rating < b.rating ? 1 : -1);\n      this._renderCards(0, Math.min(dataArrayRating.length, CARDS_EXTRA_AMOUNT), dataArrayRating, filmsListTopRatingContainerComponent);\n    }\n\n    // фильтруем массив и сортируем по комментариям\n    let dataArrayComment = this._dataFilmsArray.filter((item) => item.commentsCount > 0);\n    if (dataArrayComment.length > 0) {\n      const extraSectionMostCommentedComponent = new FilmsListExtraSectionView(`Most commented`);\n      render(this._filmsSectionComponent, extraSectionMostCommentedComponent, RenderPosition.BEFOREEND);\n      const filmsListMostCommentedContainerComponent = new FilmsListContainerView();\n      render(extraSectionMostCommentedComponent, filmsListMostCommentedContainerComponent, RenderPosition.BEFOREEND);\n      dataArrayComment = dataArrayComment.sort((a, b) => a.commentsCount < b.commentsCount ? 1 : -1);\n      this._renderCards(0, Math.min(dataArrayComment.length, CARDS_EXTRA_AMOUNT), dataArrayComment, filmsListMostCommentedContainerComponent);\n    }\n  }\n\n  _renderMainContent() {\n    this._filmsListComponent = new FilmsListView();\n    this._filmsListContainerComponent = new FilmsListContainerView();\n    render(this._filmsSectionComponent, this._filmsListComponent, RenderPosition.AFTERBEGIN);\n    render(this._filmsListComponent, this._filmsListContainerComponent, RenderPosition.BEFOREEND);\n    this._renderCards(0, Math.min(this._currentFilmsArray.length, CARDS_AMOUNT_PER_STEP), this._currentFilmsArray, this._filmsListContainerComponent);\n\n    if (this._currentFilmsArray.length > CARDS_AMOUNT_PER_STEP) {\n      this._renderShowMoreButton();\n    }\n  }\n}\n","export const getRandomInteger = (a = 0, b = 1) => {\n  const lower = Math.ceil(Math.min(a, b));\n  const upper = Math.floor(Math.max(a, b));\n\n  return Math.floor(lower + Math.random() * (upper - lower + 1));\n};\n\nexport const createElement = (template) => {\n  const newElement = document.createElement(`div`);\n  newElement.innerHTML = template;\n\n  return newElement.firstChild;\n};\n","export const compareYear = (filmA, filmB) => {\n  return filmB.dateOfProduction - filmA.dateOfProduction;\n};\n\nexport const compareRating = (filmA, filmB) => {\n  return filmB.rating - filmA.rating;\n};\n","import Abstract from \"../view/abstract.js\";\n\nexport const RenderPosition = {\n  AFTERBEGIN: `afterbegin`,\n  BEFOREEND: `beforeend`,\n  AFTEREND: `afterend`,\n};\n\nexport const render = (container, element, place) => {\n  if (container instanceof Abstract) {\n    container = container.getElement();\n  }\n\n  if (element instanceof Abstract) {\n    element = element.getElement();\n  }\n\n  switch (place) {\n    case RenderPosition.AFTERBEGIN:\n      container.prepend(element);\n      break;\n    case RenderPosition.BEFOREEND:\n      container.append(element);\n      break;\n    case RenderPosition.AFTEREEND:\n      container.after(element);\n      break;\n  }\n};\n\nexport const renderTemplate = (container, template, place) => {\n  if (container instanceof Abstract) {\n    container = container.getElement();\n  }\n\n  container.insertAdjacentHTML(place, template);\n};\n\nexport const createElement = (template) => {\n  const newElement = document.createElement(`div`);\n  newElement.innerHTML = template;\n\n  return newElement.firstChild;\n};\n\nexport const remove = (component) => {\n  if (!(component instanceof Abstract)) {\n    throw new Error(`Can remove only components`);\n  }\n\n  component.getElement().remove();\n  component.removeElement();\n};\n","import {createElement} from \"../utils.js\";\n\nexport default class Abstract {\n  constructor() {\n    if (new.target === Abstract) {\n      throw new Error(`Can't instantiate Abstract, only concrete one.`);\n    }\n    this._element = null;\n    this._callback = {};\n  }\n\n  getTemplate() {\n    throw new Error(`Abstract method not implemented: getTemplate`);\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}\n","import {COMMENTS_COUNT} from \"../const.js\";\nimport {GENRES_COUNT} from \"../const.js\";\nimport AbstractView from \"./abstract.js\";\n\nconst createFilmCardTemplate = (film = {}) => {\n  const {\n    title = ``,\n    poster = ``,\n    description = ``,\n    rating = ``,\n    dateOfProduction = ``,\n    runtime = ``,\n    genres = ``,\n    commentsCount = ``,\n    isWatchlist = ``,\n    isWatched = ``,\n    isFavorite = ``\n  } = film;\n\n  const watchlistClassName = isWatchlist ? `film-card__controls-item--add-to-watchlist film-card__controls-item--active` : `film-card__controls-item--add-to-watchlist`;\n  const watchedClassName = isWatched ? `film-card__controls-item--mark-as-watched film-card__controls-item--active` : `film-card__controls-item--mark-as-watched`;\n  const favoriteClassName = isFavorite ? `film-card__controls-item--favorite film-card__controls-item--active` : `film-card__controls-item--favorite`;\n  // ограничиваем длинну описания\n  const filmCardDescription = description.length < 140 ? description : description.slice(0, 139) + `...`;\n  // если в списке жанром не один элемент, то просто беру первый\n  const genresCurrentValue = genres > GENRES_COUNT ? GENRES_COUNT : genres;\n\n  let commentsCurrentValue = commentsCount > COMMENTS_COUNT ? COMMENTS_COUNT : commentsCount;\n\n  return (\n    `<article class=\"film-card\">\n      <h3 class=\"film-card__title\">${title}</h3>\n      <p class=\"film-card__rating\">${rating}</p>\n      <p class=\"film-card__info\">\n        <span class=\"film-card__year\">${dateOfProduction}</span>\n        <span class=\"film-card__duration\">${runtime}</span>\n        <span class=\"film-card__genre\">${genresCurrentValue}</span>\n      </p>\n      <img src=\"./images/posters/${poster}\" alt=\"${title}\" class=\"film-card__poster\">\n      <p class=\"film-card__description\">${filmCardDescription}</p>\n      <a class=\"film-card__comments\">${commentsCurrentValue} comments</a>\n      <form class=\"film-card__controls\">\n        <button class=\"film-card__controls-item ${watchlistClassName}\">Add to watchlist</button>\n        <button class=\"film-card__controls-item button ${watchedClassName}\">Mark as watched</button>\n        <button class=\"film-card__controls-item button ${favoriteClassName}\">Mark as favorite</button>\n      </form>\n    </article>`\n  );\n};\n\nexport default class FilmCard extends AbstractView {\n  constructor(film) {\n    super();\n    this.film = film;\n    this._clickHandler = this._clickHandler.bind(this);\n  }\n\n  getTemplate() {\n    return createFilmCardTemplate(this.film);\n  }\n\n  _clickHandler(evt) {\n    evt.preventDefault();\n    this._callback.click();\n  }\n\n  setHandler(callback) {\n    this._callback.click = callback;\n    this.getElement().querySelector(`.film-card__poster`).addEventListener(`click`, this._clickHandler);\n    this.getElement().querySelector(`.film-card__title`).addEventListener(`click`, this._clickHandler);\n    this.getElement().querySelector(`.film-card__comments`).addEventListener(`click`, this._clickHandler);\n  }\n}\n","export const createFilmDetailsComment = (comment = {}) => {\n  const {\n    author = ``,\n    text = ``,\n    emoji = ``,\n    date = ``\n  } = comment;\n\n\n  return (\n    `\n    <li class=\"film-details__comment\">\n      <span class=\"film-details__comment-emoji\">\n        <img src=\"./images/emoji/${emoji}\" width=\"55\" height=\"55\" alt=\"emoji-${emoji.slice(0, -4)}\">\n      </span>\n      <div>\n        <p class=\"film-details__comment-text\">${text}</p>\n        <p class=\"film-details__comment-info\">\n          <span class=\"film-details__comment-author\">${author}</span>\n          <span class=\"film-details__comment-day\">${date}</span>\n          <button class=\"film-details__comment-delete\">Delete</button>\n        </p>\n      </div>\n    </li>\n    `\n  );\n};\n","import {createFilmDetailsComment} from \"./film-details-comment\";\nimport AbstractView from \"./abstract.js\";\n\nconst createGenresTemplate = (genres) => {\n  return genres.map((genre) => `<span class=\"film-details__genre\">${genre}</span>`).join(``);\n};\n\nconst createGenreTerm = (genres) => {\n  return genres.length > 1 ? `Genres` : `Genre`;\n};\n\nconst createActorsList = (actors) => {\n  return actors.map((actor) => `${actor}`).join(`, `);\n};\nconst createWritersList = (writers) => {\n  return writers.map((writer) => `${writer}`).join(`, `);\n};\n\n\nconst createFilmDetailsTemplate = (film = {}, comments) => {\n  const {\n    posterFull = ``,\n    title = ``,\n    originalTitle = ``,\n    rating = ``,\n    director = ``,\n    writers = ``,\n    actors = ``,\n    dateOfRelease = ``,\n    runtime = ``,\n    country = ``,\n    genres = ``,\n    commentsCount = ``,\n    description = ``,\n    ageRating = ``,\n\n  } = film;\n\n  const genresTemplate = createGenresTemplate(genres);\n  const genreTerm = createGenreTerm(genres);\n  const actorsList = createActorsList(actors);\n  const writersList = createWritersList(writers);\n\n  const filmDetailsComments = comments.slice(0, commentsCount).map(createFilmDetailsComment).join(``);\n\n  return (\n    `<section class=\"film-details\">\n      <form class=\"film-details__inner\" action=\"\" method=\"get\">\n        <div class=\"form-details__top-container\">\n          <div class=\"film-details__close\">\n            <button class=\"film-details__close-btn\" type=\"button\">close</button>\n          </div>\n          <div class=\"film-details__info-wrap\">\n            <div class=\"film-details__poster\">\n              <img class=\"film-details__poster-img\" src=\"./images/posters/${posterFull}\" alt=\"${title}\">\n\n              <p class=\"film-details__age\">${ageRating}</p>\n            </div>\n\n            <div class=\"film-details__info\">\n              <div class=\"film-details__info-head\">\n                <div class=\"film-details__title-wrap\">\n                  <h3 class=\"film-details__title\">${title}</h3>\n                  <p class=\"film-details__title-original\">Original: ${originalTitle}</p>\n                </div>\n\n                <div class=\"film-details__rating\">\n                  <p class=\"film-details__total-rating\">${rating}</p>\n                </div>\n              </div>\n\n              <table class=\"film-details__table\">\n                <tr class=\"film-details__row\">\n                  <td class=\"film-details__term\">Director</td>\n                  <td class=\"film-details__cell\">${director}</td>\n                </tr>\n                <tr class=\"film-details__row\">\n                  <td class=\"film-details__term\">Writers</td>\n                  <td class=\"film-details__cell\">${writersList}</td>\n                </tr>\n                <tr class=\"film-details__row\">\n                  <td class=\"film-details__term\">Actors</td>\n                  <td class=\"film-details__cell\">${actorsList}</td>\n                </tr>\n                <tr class=\"film-details__row\">\n                  <td class=\"film-details__term\">Release Date</td>\n                  <td class=\"film-details__cell\">${dateOfRelease}</td>\n                </tr>\n                <tr class=\"film-details__row\">\n                  <td class=\"film-details__term\">Runtime</td>\n                  <td class=\"film-details__cell\">${runtime}</td>\n                </tr>\n                <tr class=\"film-details__row\">\n                  <td class=\"film-details__term\">Country</td>\n                  <td class=\"film-details__cell\">${country}</td>\n                </tr>\n              <tr class=\"film-details__row\">\n                <td class=\"film-details__term\">${genreTerm}</td>\n                <td class=\"film-details__cell\">\n                  ${genresTemplate}\n                </td>\n              </tr>\n              </table>\n\n              <p class=\"film-details__film-description\">${description}</p>\n            </div>\n          </div>\n\n          <section class=\"film-details__controls\">\n            <input type=\"checkbox\" class=\"film-details__control-input visually-hidden\" id=\"watchlist\" name=\"watchlist\">\n            <label for=\"watchlist\" class=\"film-details__control-label film-details__control-label--watchlist\">Add to watchlist</label>\n\n            <input type=\"checkbox\" class=\"film-details__control-input visually-hidden\" id=\"watched\" name=\"watched\">\n            <label for=\"watched\" class=\"film-details__control-label film-details__control-label--watched\"\">Already watched</label>\n\n            <input type=\"checkbox\" class=\"film-details__control-input visually-hidden\" id=\"favorite\" name=\"favorite\">\n            <label for=\"favorite\" class=\"film-details__control-label film-details__control-label--favorite\">Add to favorites</label>\n          </section>\n        </div>\n\n        <div class=\"form-details__bottom-container\">\n          <section class=\"film-details__comments-wrap\">\n            <h3 class=\"film-details__comments-title\">Comments <span class=\"film-details__comments-count\">${commentsCount}</span></h3>\n            <ul class=\"film-details__comments-list\">\n              ${filmDetailsComments}\n            </ul>\n            <div class=\"film-details__new-comment\">\n              <div for=\"add-emoji\" class=\"film-details__add-emoji-label\">\n                <img src=\"images/emoji/smile.png\" width=\"55\" height=\"55\" alt=\"emoji-smile\">\n              </div>\n\n              <label class=\"film-details__comment-label\">\n                <textarea class=\"film-details__comment-input\" placeholder=\"Select reaction below and write comment here\" name=\"comment\">Great movie!</textarea>\n              </label>\n\n              <div class=\"film-details__emoji-list\">\n                <input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-smile\" value=\"smile\" checked>\n                <label class=\"film-details__emoji-label\" for=\"emoji-smile\">\n                  <img src=\"./images/emoji/smile.png\" width=\"30\" height=\"30\" alt=\"emoji\">\n                </label>\n\n                <input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-sleeping\" value=\"sleeping\">\n                <label class=\"film-details__emoji-label\" for=\"emoji-sleeping\">\n                  <img src=\"./images/emoji/sleeping.png\" width=\"30\" height=\"30\" alt=\"emoji\">\n                </label>\n\n                <input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-puke\" value=\"puke\">\n                <label class=\"film-details__emoji-label\" for=\"emoji-puke\">\n                  <img src=\"./images/emoji/puke.png\" width=\"30\" height=\"30\" alt=\"emoji\">\n                </label>\n\n                <input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-angry\" value=\"angry\">\n                <label class=\"film-details__emoji-label\" for=\"emoji-angry\">\n                  <img src=\"./images/emoji/angry.png\" width=\"30\" height=\"30\" alt=\"emoji\">\n                </label>\n              </div>\n            </div>\n          </section>\n        </div>\n      </form>\n    </section>`\n  );\n};\n\nexport default class FilmCardDetails extends AbstractView {\n  constructor(film, comments) {\n    super();\n    this.comments = comments;\n    this.film = film;\n    this._clickHandler = this._clickHandler.bind(this);\n  }\n\n  getTemplate() {\n    return createFilmDetailsTemplate(this.film, this.comments);\n  }\n\n  _clickHandler(evt) {\n    evt.preventDefault();\n    this._callback.click();\n  }\n\n  setHandler(callback) {\n    this._callback.click = callback;\n    this.getElement().querySelector(`.film-details__close-btn`).addEventListener(`click`, this._clickHandler);\n\n  }\n}\n","import AbstractView from \"./abstract.js\";\n\nconst createFilmsListExtraTemplate = (title) => {\n  return (\n    `<section class=\"films-list--extra\">\n      <h2 class=\"films-list__title\">${title}</h2>\n    </section>`\n  );\n};\n\nexport default class FilmsListExtraSection extends AbstractView {\n  constructor(title) {\n    super();\n    this._title = title;\n  }\n\n  getTemplate() {\n    return createFilmsListExtraTemplate(this._title);\n  }\n}\n","import AbstractView from \"./abstract.js\";\n\nconst createFilmsListContainerTemplate = () => {\n  return (\n    `<div class=\"films-list__container\"></div>`\n  );\n};\n\nexport default class FilmsListContainer extends AbstractView {\n  getTemplate() {\n    return createFilmsListContainerTemplate();\n  }\n}\n","import AbstractView from \"./abstract.js\";\n\nconst createFilmsListTemplate = () => {\n  return (\n    `<section class=\"films-list\">\n      <h2 class=\"films-list__title visually-hidden\">All movies. Upcoming</h2>\n\n    </section>`\n  );\n};\n\nexport default class FilmsList extends AbstractView {\n  getTemplate() {\n    return createFilmsListTemplate();\n  }\n}\n","import AbstractView from \"./abstract.js\";\n\nconst createFilmsSectionTemplate = () => {\n  return (\n    `<section class=\"films\"></section>`\n  );\n};\n\nexport default class FilmsSection extends AbstractView {\n  getTemplate() {\n    return createFilmsSectionTemplate();\n  }\n}\n","import AbstractView from \"./abstract.js\";\nimport {NavType} from \"../const.js\";\n\nconst createMainNavigationTemplate = (data) => {\n  const watchlistAmount = (typeof data !== `undefined` && data !== null) ? data.reduce((prev, item) => prev + +item.isWatchlist, 0) : 0;\n  const historyAmount = (typeof data !== `undefined` && data !== null) ? data.reduce((prev, item) => prev + +item.isWatched, 0) : 0;\n  const favoritesAmount = (typeof data !== `undefined` && data !== null) ? data.reduce((prev, item) => prev + +item.isFavorite, 0) : 0;\n\n  return (\n    `<nav class=\"main-navigation\">\n      <div class=\"main-navigation__items\">\n        <a href=\"#all\" class=\"main-navigation__item main-navigation__item--active\" data-nav-type=\"${NavType.DEFAULT}\">All movies</a>\n        <a href=\"#watchlist\" class=\"main-navigation__item\" data-nav-type=\"${NavType.WATCHLIST}\">Watchlist <span class=\"main-navigation__item-count\">${watchlistAmount}</span></a>\n        <a href=\"#history\" class=\"main-navigation__item\" data-nav-type=\"${NavType.HISTORY}\">History <span class=\"main-navigation__item-count\">${historyAmount}</span></a>\n        <a href=\"#favorites\" class=\"main-navigation__item\" data-nav-type=\"${NavType.FAVORITES}\">Favorites <span class=\"main-navigation__item-count\">${favoritesAmount}</span></a>\n      </div>\n      <a href=\"#stats\" class=\"main-navigation__additional\">Stats</a>\n    </nav>`\n  );\n};\n\nexport default class MainNavigation extends AbstractView {\n  constructor(data) {\n    super();\n    this._data = data;\n\n    this._navTypeChangeHandler = this._navTypeChangeHandler.bind(this);\n  }\n\n  getTemplate() {\n    return createMainNavigationTemplate(this._data);\n  }\n\n  _navTypeChangeHandler(evt) {\n    if (evt.target.tagName !== `A`) {\n      return;\n    }\n\n    evt.preventDefault();\n    this._callback.navTypeChange(evt.target.dataset.navType);\n  }\n\n  setNavTypeChangeHandler(callback) {\n    this._callback.navTypeChange = callback;\n    this.getElement().addEventListener(`click`, this._navTypeChangeHandler);\n  }\n}\n","import AbstractView from \"./abstract.js\";\n\nconst createNoFilmsDataTemplate = () => {\n  return (\n    `<section class=\"films-list\">\n      <h2 class=\"films-list__title\">There are no movies in our database</h2>\n    </section>`\n  );\n};\n\nexport default class NoFilmsData extends AbstractView {\n  getTemplate() {\n    return createNoFilmsDataTemplate();\n  }\n}\n","import AbstractView from \"./abstract.js\";\n\nconst createShowMoreButtonTemplate = () => {\n  return (\n    `<button class=\"films-list__show-more\">Show more</button>`\n  );\n};\n\nexport default class ShowMoreButton extends AbstractView {\n  constructor() {\n    super();\n\n    this._clickHandler = this._clickHandler.bind(this);\n  }\n\n  getTemplate() {\n    return createShowMoreButtonTemplate();\n  }\n\n  _clickHandler(evt) {\n    evt.preventDefault();\n    this._callback.click();\n  }\n\n  setClickHandler(callback) {\n    this._callback.click = callback;\n    this.getElement().addEventListener(`click`, this._clickHandler);\n  }\n}\n","import AbstractView from \"./abstract.js\";\nimport {SortType} from \"../const.js\";\n\nconst createSortingTemplate = () => {\n  return (\n    `<ul class=\"sort\">\n      <li><a href=\"#\" class=\"sort__button sort__button--active\" data-sort-type=\"${SortType.DEFAULT}\">Sort by default</a></li>\n      <li><a href=\"#\" class=\"sort__button\" data-sort-type=\"${SortType.DATE}\">Sort by date</a></li>\n      <li><a href=\"#\" class=\"sort__button\" data-sort-type=\"${SortType.RATING}\">Sort by rating</a></li>\n    </ul>`\n  );\n};\n\nexport default class Sorting extends AbstractView {\n  constructor() {\n    super();\n\n    this._sortTypeChangeHandler = this._sortTypeChangeHandler.bind(this);\n  }\n\n  getTemplate() {\n    return createSortingTemplate();\n  }\n\n  _sortTypeChangeHandler(evt) {\n    if (evt.target.tagName !== `A`) {\n      return;\n    }\n\n    evt.preventDefault();\n    this._callback.sortTypeChange(evt.target.dataset.sortType);\n  }\n\n  setSortTypeChangeHandler(callback) {\n    this._callback.sortTypeChange = callback;\n    this.getElement().addEventListener(`click`, this._sortTypeChangeHandler);\n  }\n}\n","import AbstractView from \"./abstract.js\";\n\nconst createStatisticsTemplate = (data) => {\n  const filmsAmount = data !== null ? data.length : 0;\n\n  return (\n    `<p>${filmsAmount} movies inside</p>`\n  );\n};\n\nexport default class Statistics extends AbstractView {\n  constructor(data) {\n    super();\n    this._data = data;\n  }\n\n  getTemplate() {\n    return createStatisticsTemplate(this._data);\n  }\n}\n","import AbstractView from \"./abstract.js\";\n\nconst createTitleOfTheUserTemplate = () => {\n  return (\n    `<section class=\"header__profile profile\">\n      <p class=\"profile__rating\">Movie Buff</p>\n      <img class=\"profile__avatar\" src=\"images/bitmap@2x.png\" alt=\"Avatar\" width=\"35\" height=\"35\">\n    </section>`\n  );\n};\n\nexport default class TitleOfTheUser extends AbstractView {\n  getTemplate() {\n    return createTitleOfTheUserTemplate();\n  }\n}\n"],"sourceRoot":""}